local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local PLACE_ID = 109983668079237

local targetedPets = {
    ["Los Combinasionas"] = true,
    ["Garama and Mandundung"] = true,
    ["Nuclearo Dinossauro"] = true,
    ["La Grande Combinasion"] = true,
    ["Dragon Canelloni"] = true,
    ["Chicleteira Bicicleteira"] = true,
}

local function sendWebhook(petName, inMachine)
    local webhookUrl = inMachine
        and "https://discord.com/api/webhooks/1398949589792587897/bjhmpxp-gy5zzi_S5gxaJTT4pT0RRlSF3jdI4CuhvoP8y-efC5SoIKRiopMVpDdKZL2X"
        or "https://discord.com/api/webhooks/1399229152649019452/DMtjxmpnDT0LG0NFxhPNil0NdgAEtpco_DBbKkLd2FOx7_z2CnANyooo-pV3kJEUKBnH"

    local jobId = game.JobId
    local safariLink = "https://testing5312.github.io/joiner/?placeId=" .. PLACE_ID .. "&gameInstanceId=" .. jobId

    local content = {
        content = inMachine and "@everyone" or "",
        embeds = {{
            title = inMachine and "**Pet Found In Machine!**" or "**Pet Found!**",
            description = ("Pet: %s\nJob ID: %s\nTeleport Script:\n```lua\ngame:GetService(\"TeleportService\"):TeleportToPlaceInstance(%d, \"%s\")\n```\nJoin with Safari:\n[%s](%s)")
                :format(petName, jobId, PLACE_ID, jobId, safariLink, safariLink),
            color = inMachine and 0xFF0000 or 0x00FF00,
        }}
    }

    local data = HttpService:JSONEncode(content)

    local success, err = pcall(function()
        HttpService:PostAsync(webhookUrl, data, Enum.HttpContentType.ApplicationJson)
    end)

    if not success then
        warn("Failed to send webhook:", err)
    else
        print("Webhook sent for pet:", petName, inMachine and "(In Machine)" or "")
    end
end

local function isPetInMachine(petModel)
    local machine = workspace:FindFirstChild("Fuse Machine")
    return machine and petModel:IsDescendantOf(machine)
end

local function scanForPets()
    print("Scanning for pets...")
    local found = false
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name == "Pet" and obj:FindFirstChild("Name") then
            local petName = obj.Name.Value or obj:FindFirstChild("Name").Value
            if targetedPets[petName] then
                found = true
                local inMachine = isPetInMachine(obj)
                sendWebhook(petName, inMachine)
            end
        end
    end
    return found
end

local function getPublicServers()
    local servers = {}
    local cursor = ""
    repeat
        local url = ("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100%s"):format(
            PLACE_ID,
            cursor ~= "" and "&cursor=" .. cursor or ""
        )
        local success, result = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(url))
        end)
        if success and result and result.data then
            for _, server in ipairs(result.data) do
                if server.id ~= game.JobId then
                    table.insert(servers, server.id)
                end
            end
            cursor = result.nextPageCursor or ""
        else
            warn("Failed to get servers.")
            break
        end
    until cursor == "" or #servers > 0
    return servers
end

local function serverHop()
    local retryDelay = 1

    local servers = getPublicServers()
    if #servers == 0 then
        warn("No servers found. Retrying in 3s...")
        task.wait(3)
        return serverHop()
    end

    local newServerId = servers[math.random(1, #servers)]
    print("Teleporting to:", newServerId)

    pcall(function()
        queue_on_teleport('loadstring(game:HttpGet("YOUR_RAW_SCRIPT_URL_HERE"))()') -- ðŸŸ¡ Replace this
    end)

    local success = false
    repeat
        success = pcall(function()
            TeleportService:TeleportToPlaceInstance(PLACE_ID, newServerId, Players.LocalPlayer)
        end)
        if not success then
            warn("Teleport failed. Retrying in", retryDelay, "seconds...")
            task.wait(retryDelay)
        end
    until success
end

local function main()
    local found = scanForPets()

    if found then
        print("Targeted pet found. Waiting 5 seconds before hopping...")
        task.wait(5)
    else
        print("No targeted pets found. Hopping immediately.")
    end

    serverHop()
end

main()
